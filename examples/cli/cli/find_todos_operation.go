// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"

	"github.com/go-swagger/go-swagger/examples/cli/client/todos"

	"github.com/spf13/cobra"
)

// makeOperationTodosFindTodosCmd returns a cmd to handle operation findTodos
func makeOperationTodosFindTodosCmd() (*cobra.Command, error) {
	cmd := &cobra.Command{
		Use:   "findTodos",
		Short: ``,
		RunE:  runOperationTodosFindTodos,
	}

	if err := registerOperationTodosFindTodosParamFlags(cmd); err != nil {
		return nil, err
	}

	return cmd, nil
}

// runOperationTodosFindTodos uses cmd flags to call endpoint api
func runOperationTodosFindTodos(cmd *cobra.Command, args []string) error {
	appCli, err := makeClient(cmd, args)
	if err != nil {
		return err
	}
	// retrieve flag values from cmd and fill params
	params := todos.NewFindTodosParams()
	if cmd.Flags().Changed("limit") {
		limitValue, err := cmd.Flags().GetInt32("limit")
		if err != nil {
			return err
		}
		params.Limit = &limitValue
	}
	if cmd.Flags().Changed("since") {
		sinceValue, err := cmd.Flags().GetInt64("since")
		if err != nil {
			return err
		}
		params.Since = &sinceValue
	}
	// make request and then print result
	resp, respErr := appCli.Todos.FindTodos(params, nil)
	if err := printOperationTodosFindTodosResult(resp, respErr); err != nil {
		return err
	}
	return nil
}

// printOperationTodosFindTodosResult prints output to stdout
func printOperationTodosFindTodosResult(resp *todos.FindTodosOK, respErr error) error {
	if respErr != nil {

		var iResp interface{} = respErr
		defaultResp, ok := iResp.(*todos.FindTodosDefault)
		if !ok {
			return respErr
		}
		if defaultResp.Payload != nil {
			msgStr, err := json.Marshal(defaultResp.Payload)
			if err != nil {
				return err
			}
			fmt.Println(string(msgStr))
			return nil
		}

		return respErr
	}

	if resp.Payload != nil {
		msgStr, err := json.Marshal(resp.Payload)
		if err != nil {
			return err
		}
		fmt.Println(string(msgStr))
	}

	return nil
}

// registerOperationTodosFindTodosParamFlags registers all flags needed to fill params
func registerOperationTodosFindTodosParamFlags(cmd *cobra.Command) error {

	var limitDefault int32 = 20
	_ = cmd.PersistentFlags().Int32("limit", limitDefault, "")

	var sinceDefault int64
	_ = cmd.PersistentFlags().Int64("since", sinceDefault, "")

	return nil
}
