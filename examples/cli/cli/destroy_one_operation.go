// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"

	"github.com/go-swagger/go-swagger/examples/cli/client/todos"

	"github.com/spf13/cobra"
)

// makeOperationTodosDestroyOneCmd returns a cmd to handle operation destroyOne
func makeOperationTodosDestroyOneCmd() (*cobra.Command, error) {
	cmd := &cobra.Command{
		Use:   "destroyOne",
		Short: ``,
		RunE:  runOperationTodosDestroyOne,
	}

	if err := registerOperationTodosDestroyOneParamFlags(cmd); err != nil {
		return nil, err
	}

	return cmd, nil
}

// runOperationTodosDestroyOne uses cmd flags to call endpoint api
func runOperationTodosDestroyOne(cmd *cobra.Command, args []string) error {
	appCli, err := makeClient(cmd, args)
	if err != nil {
		return err
	}
	// retrieve flag values from cmd and fill params
	params := todos.NewDestroyOneParams()
	if cmd.Flags().Changed("id") {
		idValue, err := cmd.Flags().GetInt64("id")
		if err != nil {
			return err
		}
		params.ID = idValue
	}
	// make request and then print result
	resp, respErr := appCli.Todos.DestroyOne(params, nil)
	if err := printOperationTodosDestroyOneResult(resp, respErr); err != nil {
		return err
	}
	return nil
}

// printOperationTodosDestroyOneResult prints output to stdout
func printOperationTodosDestroyOneResult(resp *todos.DestroyOneNoContent, respErr error) error {
	if respErr != nil {

		var iResp interface{} = respErr
		defaultResp, ok := iResp.(*todos.DestroyOneDefault)
		if !ok {
			return respErr
		}
		if defaultResp.Payload != nil {
			msgStr, err := json.Marshal(defaultResp.Payload)
			if err != nil {
				return err
			}
			fmt.Println(string(msgStr))
			return nil
		}

		return respErr
	}

	// warning: non schema response destroyOneNoContent is not supported by go-swagger cli yet.

	return nil
}

// registerOperationTodosDestroyOneParamFlags registers all flags needed to fill params
func registerOperationTodosDestroyOneParamFlags(cmd *cobra.Command) error {

	var idDefault int64
	_ = cmd.PersistentFlags().Int64("id", idDefault, "Required. ")

	if err := cmd.MarkPersistentFlagRequired("id"); err != nil {
		return err
	}

	return nil
}
